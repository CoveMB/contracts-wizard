name: Test

on:
  push:
    branches: [master]
  pull_request: {}

jobs:
  format-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Check formatting
        run: yarn format:check
      - name: Run linter
        run: yarn lint

  deno-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up Deno 1.46.3 (matching Netlify edge function environment)
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: '1.46.3'
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Deno check API
        run: yarn type:check:api

  build:
    strategy:
      matrix:
        package:
          - solidity
          - cairo
          - stellar
          - stylus

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Set up environment
        uses: ./.github/actions/setup

      # ----------------------------
      # Solidity setup
      - name: Install Foundry
        if: matrix.package == 'solidity'
        uses: foundry-rs/foundry-toolchain@82dee4ba654bd2146511f85f0d013af94670c4de #v1.4.0

      # ----------------------------
      # Stellar setup

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry
          restore-keys: |
            cargo-registry-
        if: always()

      - name: Cache scaffold CLIs
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: scaffold-cli-${{ matrix.package }}
          restore-keys: |
            scaffold-cli-${{ matrix.package }}-
        if: always()

      - name: Set up Stellar CLI
        if: matrix.package == 'stellar'
        uses: stellar/stellar-cli@v22.5.0

      - name: Install Scaffold & Registry CLIs
        if: matrix.package == 'stellar'
        run: |
          # only rebuild if not already on the cache
          if ! command -v stellar-scaffold-cli >/dev/null; then
            cargo install --git https://github.com/ahalabs/scaffold-stellar stellar-scaffold-cli
          fi
          if ! command -v stellar-registry-cli >/dev/null; then
            cargo install --git https://github.com/ahalabs/scaffold-stellar stellar-registry-cli
          fi

      - name: Start Docker
        if: matrix.package == 'stellar'
        run: |
          sudo service docker start
          docker info

      # ----------------------------
      - name: Compile TypeScript
        run: yarn tsc
        working-directory: packages/core/${{matrix.package}}
      - name: Check Svelte
        run: yarn svelte-check
        working-directory: packages/ui
      - name: Run tests
        run: yarn test
        working-directory: packages/core/${{matrix.package}}
